import kotlin.Boolean;

CREATE TABLE IF NOT EXISTS Config (
   id INTEGER NOT NULL PRIMARY KEY,
   dark_mode INTEGER NOT NULL,
   aapt_path TEXT NOT NULL,
   flag_delete INTEGER AS Boolean NOT NULL,
   signer_suffix TEXT NOT NULL,
   output_path TEXT NOT NULL,
   is_align_file_size INTEGER AS Boolean NOT NULL,
   keytool_path TEXT NOT NULL DEFAULT '',
   dest_store_type TEXT NOT NULL DEFAULT 'JKS'
);

INSERT INTO Config(id, dark_mode, aapt_path, flag_delete, signer_suffix, output_path, is_align_file_size)
SELECT 0, 0, "", 1, "_sign", "", 1
WHERE (SELECT COUNT(*) FROM Config WHERE id = 0) = 0;

initInternal:
UPDATE Config
SET aapt_path = CASE WHEN aapt_path = '' THEN ? ELSE aapt_path END
WHERE id = 0;

getAaptPath:
SELECT aapt_path FROM Config WHERE id = 0;

getFlagDelete:
SELECT flag_delete FROM Config WHERE id = 0;

getSignerSuffix:
SELECT signer_suffix FROM Config WHERE id = 0;

getDarkMode:
SELECT dark_mode FROM Config WHERE id = 0;

getOutputPath:
SELECT output_path FROM Config WHERE id = 0;

getIsAlignFileSize:
SELECT is_align_file_size FROM Config WHERE id = 0;

getKeytoolPath:
SELECT keytool_path FROM Config WHERE id = 0;

getDestStoreType:
SELECT dest_store_type FROM Config WHERE id = 0;

updateAaptPath:
UPDATE Config SET aapt_path = ? WHERE id = 0;

updateFlagDelete:
UPDATE Config SET flag_delete = ? WHERE id = 0;

updateSignerSuffix:
UPDATE Config SET signer_suffix = ? WHERE id = 0;

updateDarkMode:
UPDATE Config SET dark_mode = ? WHERE id = 0;

updateOutputPath:
UPDATE Config SET output_path = ? WHERE id = 0;

updateIsAlignFileSize:
UPDATE Config SET is_align_file_size = ? WHERE id = 0;

updateKeytoolPath:
UPDATE Config SET keytool_path = ? WHERE id = 0;

updateDestStoreType:
UPDATE Config SET dest_store_type = ? WHERE id = 0;